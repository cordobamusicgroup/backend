version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - 'DOCKER_BUILDKIT=1'
        - 'VERSION=${VERSION}' # Version configurable
    image: ${DOCKER_IMAGE}:${VERSION} # Usa variable de imagen y versión
    container_name: cmg-api-${ENV}
    env_file:
      - ${ENV_FILE} # Archivo de entorno específico
    ports:
      - '${APP_PORT}:6060'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    container_name: cmg-db-${ENV}
    image: 'postgres:latest'
    env_file:
      - ${DB_ENV_FILE} # Archivo de entorno para la base de datos
    volumes:
      - ./docker/postgres/${ENV}_data:/var/lib/postgresql/data # Volumen específico para el entorno
      - ./docker/postgres/${ENV}_log:/var/log/postgresql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - '${DB_PORT}:5432'

  redis:
    container_name: cmg-redis-${ENV}
    image: 'redis:latest'
    ports:
      - '${REDIS_PORT}:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  default:
    external: true
    name: nginx_webnet
