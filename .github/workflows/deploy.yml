name: Deploy to Server

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: kvm4
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    concurrency:
      group: deploy-${{ github.ref_name }} # Agrupar por rama (main o staging)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH keys and known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts 2>/dev/null

      - name: Validate deployment environment variables
        run: |
          if [ -z "${{ vars.DEPLOY_PATH }}" ] || [ -z "${{ vars.ENV }}" ]; then
            echo "‚ùå Error: DEPLOY_PATH o ENV no est√°n configuradas en GitHub Actions."
            exit 1
          fi
        env:
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
          ENV: ${{ vars.ENV }}

      - name: Debug Environment Variables
        run: |
          echo "üìå DEPLOY_PATH: $DEPLOY_PATH"
          echo "üìå ENV: $ENV"
        env:
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
          ENV: ${{ vars.ENV }}

      - name: Deploy and restart containers on server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
          ENV: ${{ vars.ENV }}
        run: |
          echo "üöÄ Iniciando despliegue en $DEPLOY_PATH..."
          ssh -i ~/.ssh/id_rsa -p $SSH_PORT -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST << 'EOF'
            
            set -e  # Detener ejecuci√≥n si hay errores

            # Pasar variables de entorno manualmente dentro de la sesi√≥n SSH
            export DEPLOY_PATH='${{ vars.DEPLOY_PATH }}'
            export ENV='${{ vars.ENV }}'

            echo "üñ•Ô∏è Conectado a: $(hostname)"
            echo "üìÇ DEPLOY_PATH: $DEPLOY_PATH"
            echo "üìå ENV: $ENV"

            if [ ! -d "$DEPLOY_PATH" ]; then
              echo "‚ùå Error: DEPLOY_PATH no existe."
              exit 1
            fi

            cd "$DEPLOY_PATH"
            echo "‚úÖ Ubicaci√≥n actual: $(pwd)"

            if [ ! -d ".git" ]; then
              echo "‚ùå Error: No es un repositorio Git."
              exit 1
            fi

            echo "üîÑ Restableciendo cambios locales y actualizando c√≥digo..."
            git reset --hard HEAD
            git clean -fd  # Elimina archivos no rastreados
            
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
            echo "üìå Usando rama: $BRANCH"
            
            git fetch origin $BRANCH
            git pull origin $BRANCH --rebase

            echo "üöÄ Reiniciando contenedores..."
            chmod +x start_containers.sh
            ./start_containers.sh "$ENV"

            echo "‚úÖ Despliegue completado."
          EOF
