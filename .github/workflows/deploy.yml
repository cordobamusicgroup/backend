name: Deploy to Server

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: kvm4

    concurrency:
      group: deploy-${{ github.ref_name }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔑 Set up SSH keys and known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts 2>/dev/null

      - name: 🧠 Set environment values based on branch
        run: |
          set -u
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "DEPLOY_PATH=${{ vars.DEPLOY_PATH_PROD }}" >> $GITHUB_ENV
            echo "ENV=production" >> $GITHUB_ENV
          else
            echo "DEPLOY_PATH=${{ vars.DEPLOY_PATH_STAGING }}" >> $GITHUB_ENV
            echo "ENV=staging" >> $GITHUB_ENV
          fi

      - name: 🕵️ Debug environment values
        run: |
          echo "📌 DEPLOY_PATH: $DEPLOY_PATH"
          echo "📌 ENV: $ENV"

      - name: 📅 Show deploy timestamp
        run: |
          echo "🕒 Deploy time: $(date -u)"

      - name: 🚀 Deploy and restart containers on server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          echo "🚀 Starting deployment to $DEPLOY_PATH..."
          ssh -i ~/.ssh/id_rsa -p $SSH_PORT -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST \
            "DEPLOY_PATH='$DEPLOY_PATH' ENV='$ENV' bash -s" << 'EOF'

            set -e

            echo "🖥️ Connected to: $(hostname)"
            echo "📂 DEPLOY_PATH: $DEPLOY_PATH"
            echo "📌 ENV: $ENV"

            if [ ! -d "$DEPLOY_PATH" ]; then
              echo "❌ Error: DEPLOY_PATH does not exist."
              exit 1
            fi

            cd "$DEPLOY_PATH"
            echo "✅ Current directory: $(pwd)"

            if [ ! -d ".git" ]; then
              echo "❌ Error: Not a Git repository."
              exit 1
            fi

            echo "🔄 Resetting local changes and updating code..."
            git reset --hard HEAD
            git clean -fd
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
            git fetch origin $BRANCH
            git pull origin $BRANCH --rebase

            echo "🚀 Restarting containers..."
            chmod +x start_containers.sh
            ./start_containers.sh "$ENV"

            echo "✅ Deployment completed successfully."
          EOF
