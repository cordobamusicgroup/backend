name: Deploy to Server

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: kvm4
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    concurrency:
      group: deploy-${{ github.ref_name }} # Group by branch (main or staging)

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üîë Set up SSH keys and known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts 2>/dev/null

      - name: üõ†Ô∏è Validate deployment environment variables
        run: |
          if [ -z "${{ vars.DEPLOY_PATH }}" ] || [ -z "${{ vars.ENV }}" ]; then
            echo "‚ùå Error: DEPLOY_PATH or ENV is not set in GitHub Actions."
            exit 1
          fi
        env:
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
          ENV: ${{ vars.ENV }}

      - name: üïµÔ∏è Debug Environment Variables
        run: |
          echo "üìå DEPLOY_PATH: $DEPLOY_PATH"
          echo "üìå ENV: $ENV"
        env:
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
          ENV: ${{ vars.ENV }}

      - name: üöÄ Deploy and restart containers on server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
          ENV: ${{ vars.ENV }}
        run: |
          echo "üöÄ Starting deployment to $DEPLOY_PATH..."
          ssh -i ~/.ssh/id_rsa -p $SSH_PORT -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST << 'EOF'
            
            set -e  # Stop execution on error

            # Pass environment variables manually inside SSH session
            export DEPLOY_PATH='${{ vars.DEPLOY_PATH }}'
            export ENV='${{ vars.ENV }}'

            echo "üñ•Ô∏è Connected to: $(hostname)"
            echo "üìÇ DEPLOY_PATH: $DEPLOY_PATH"
            echo "üìå ENV: $ENV"

            if [ ! -d "$DEPLOY_PATH" ]; then
              echo "‚ùå Error: DEPLOY_PATH does not exist."
              exit 1
            fi

            cd "$DEPLOY_PATH"
            echo "‚úÖ Current directory: $(pwd)"

            if [ ! -d ".git" ]; then
              echo "‚ùå Error: Not a Git repository."
              exit 1
            fi

            echo "üîÑ Resetting local changes and updating code..."
            git reset --hard HEAD
            git clean -fd  # Remove untracked files
            
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
            echo "üìå Using branch: $BRANCH"
            
            git fetch origin $BRANCH
            git pull origin $BRANCH --rebase

            echo "üöÄ Restarting containers..."
            chmod +x start_containers.sh
            ./start_containers.sh "$ENV"

            echo "‚úÖ Deployment completed successfully."
          EOF
