name: Deploy to Server

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH keys and known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)" > /dev/null 2>&1
          ssh-add ~/.ssh/id_rsa > /dev/null 2>&1
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts 2>/dev/null

      - name: Set deployment environment variables
        env:
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
          ENV: ${{ vars.ENV }}
        run: |
          if [ -z "$DEPLOY_PATH" ] || [ -z "$ENV" ]; then
            echo "Error: Environment variables not set."; exit 1
          fi

      - name: Deploy and start containers on server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
          ENV: ${{ vars.ENV }}
        run: |
          ssh -p $SSH_PORT -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST << 'EOF'
            echo "Switching to deployment path $DEPLOY_PATH"
            cd $DEPLOY_PATH || { echo "Deployment path does not exist"; exit 1; }

            if [ ! -d ".git" ]; then
              echo "Error: Not a git repository"; exit 1
            fi

            echo "Fetching latest code for branch $ENV"
            git fetch --all > /dev/null 2>&1
            git reset --hard origin/$ENV > /dev/null 2>&1

            echo "Starting containers with environment: $ENV"
            chmod +x start_containers.sh
            ./start_containers.sh $ENV
          EOF
