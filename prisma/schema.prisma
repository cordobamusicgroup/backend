generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User  {
  id       Int     @id @default(autoincrement())
  username String  @unique
  email    String  @unique
  password String
  role     Role    @default(USER)
  clientId Int?
  client   Client? @relation(fields: [clientId], references: [id])
}

model Client {
  id        Int        @id @default(autoincrement())
  name      String
  type      ClientType
  addressId Int
  vatId     String
  taxId     String
  address   Address    @relation(fields: [addressId], references: [id])
  label     Label[]
  users     User[]
}

model Address {
  id        Int      @id @default(autoincrement())
  street    String
  city      String
  state     String
  countryId Int
  zip       String
  country   Country  @relation(fields: [countryId], references: [id])
  client    Client[]
}

model Country {
  id        Int       @id @default(autoincrement())
  name      String
  code      String
  continent String
  address   Address[]
  label     Label[]
}

model Label {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  clientId  Int
  countryId Int
  website   String
  client    Client  @relation(fields: [clientId], references: [id])
  country   Country @relation(fields: [countryId], references: [id])
}

model LabelRegistrations {
  id               Int                        @id @default(autoincrement())
  beatportStatus   LabelRegistrationsStatuses @default(NO_REGISTRATION)
  traxsourceStatus LabelRegistrationsStatuses @default(NO_REGISTRATION)
  beatportUrl      String
  traxsourceUrl    String
}

enum ClientType {
  INDIVIDUAL
  COMPANY
}

enum Role {
  ADMIN
  ADMIN_CONTENT
  ADMIN_LEGAL
  ADMIN_MANAGER
  USER
}

enum LabelRegistrationsStatuses {
  NO_REGISTRATION
  PENDING
  ACTIVE
}
